---
title: Pixelize
code-links: binder
---

```{python}
#| eval: True
#| echo: true

import ipywidgets as widgets
from ipywidgets import interact, interactive, fixed, interact_manual
import matplotlib.pyplot as plt
import numpy as np
from PIL import Image, ImageDraw

# Create a blank canvas to draw
canvas_size = 256
img = Image.new("RGB", (canvas_size, canvas_size), "white")
draw = ImageDraw.Draw(img)

# Define the interactive drawing widget
draw_widget = widgets.Output()

@draw_widget.capture(clear_output=True)
def draw_image(x, y, pen_size, color):
    draw.ellipse([x-pen_size, y-pen_size, x+pen_size, y+pen_size], fill=color)
    display(img)

# Create sliders and color picker
x_slider = widgets.IntSlider(min=0, max=canvas_size-1, description='X:')
y_slider = widgets.IntSlider(min=0, max=canvas_size-1, description='Y:')
pen_size_slider = widgets.IntSlider(min=1, max=20, description='Pen Size:')
color_picker = widgets.ColorPicker(concise=False, description='Pick a color', value='black')

draw_button = widgets.Button(description="Draw")
draw_button.on_click(lambda x: draw_image(x_slider.value, y_slider.value, pen_size_slider.value, color_picker.value))

# Flatten and pixelize image
def pixelize_and_flatten_image(img):
    small_img = img.resize((16, 16), Image.BILINEAR)
    img_array = np.array(small_img)
    flattened_vector = img_array.flatten()
    return small_img, flattened_vector

def show_flattened_image(img):
    small_img, flattened_vector = pixelize_and_flatten_image(img)
    fig, axes = plt.subplots(1, 2, figsize=(12, 6))
    axes[0].imshow(img)
    axes[0].set_title("Original Image")
    axes[0].axis('off')
    axes[1].imshow(small_img)
    axes[1].set_title("Pixelized Image (16x16)")
    axes[1].axis('off')
    plt.show()

    print("Flattened Vector:\n", flattened_vector)

pixelize_button = widgets.Button(description="Pixelize and Flatten")
pixelize_button.on_click(lambda x: show_flattened_image(img))

# Display widgets
display(widgets.VBox([x_slider, y_slider, pen_size_slider, color_picker, draw_button, pixelize_button, draw_widget]))
```